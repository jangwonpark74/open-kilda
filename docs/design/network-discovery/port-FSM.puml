Internal state:
* remote endpoint (swId + port) (initial not set)
* online (boolean) (initial true)

Input signals:
* port-up
* port-down
* port-managed
* port-unmanaged
* discovery-timer
* discovery
* discovery-pushed
* enable
* disable
* online
* offline

Output signals:
* isl-up
* isl-down
* isl-disable
* isl-move
* isl-push-fail (?)
* isl-unmanaged
* push-discovery

@startuml
[*] --> INIT

INIT -r-> PREPOPULATE : remote-data
INIT --> BECOME_OFFLINE : offline
INIT --> OPERATIONAL : online

PREPOPULATE : enter / set remote
PREPOPULATE -l-> INIT : next

state OPERATIONAL {
    [*] --> UNKNOWN

    UNKNOWN : enter / set online true
    UNKNOWN --> DOWN : port-down
    UNKNOWN --> UP : port-up

    UP --> DOWN : port-down
    UP --> makeDiscovery : discovery-timer
    UP --> DISCOVERED : discovery

    makeDiscovery : enter / push-discovery
    makeDiscovery --> UP : next

    DOWN --> UP : port-up

    state DISCOVERED {
        DISCOVERED : enter / record remote if unset
        DISCOVERED : enter / emit isl-up

        state checkMoved <<choice>>

        [*] --> pending
        pending --> pushed : discovery-timer
        pending -d-> checkMoved : discovered
        pending --> pending : discovery-pushed

        pushed --> confirmed : discovery-pushed
        pushed --> failed : discovery-timer
        pushed -d-> checkMoved : discovery

        confirmed : enter / emit push-discovery
        confirmed --> pending : next

        failed : enter / emit isl-push-fail
        failed --> pending

        checkMoved -u-> pending : same-remote
        checkMoved -u-> moved : moved

        moved : enter / emit isl-move
        moved : enter / emit isl-up
        moved : enter / record remote
        moved --> pending : next
    }
    DISCOVERED -u-> becomeUndiscovered : port-down

    becomeUndiscovered : enter / emit isl-down
    becomeUndiscovered --> DOWN : next
}

OPERATIONAL --> BECOME_OFFLINE : offline
OPERATIONAL --> BECOME_DISABLED : disable
OPERATIONAL --> BECOME_UNMANAGED : port-unmanaged

BECOME_OFFLINE --> UNOPERATIONAL : next
BECOME_OFFLINE : enter / set online = false

BECOME_DISABLED --> UNOPERATIONAL : next
BECOME_DISABLED : enter / set enabled = false
BECOME_DISABLED : enter / emit isl-disable if have remote

BECOME_UNMANAGED --> UNOPERATIONAL : next
BECOME_UNMANAGED : enter / set managed = false
BECOME_UNMANAGED : enter / emit isl-unmanaged if have remote

state UNOPERATIONAL {
    [*] --> PENDING

    state OPERATIONAL_DECISION <<choice>>

    PENDING --> OPERATIONAL_DECISION : online (set online = true)
    PENDING --> OPERATIONAL_DECISION : offline (set online = false)
    PENDING --> OPERATIONAL_DECISION : disable (set enabled = false)
    PENDING --> OPERATIONAL_DECISION : enable (set enabled = true)
    PENDING --> OPERATIONAL_DECISION : port-unmanaged (set managed = false)
    PENDING --> OPERATIONAL_DECISION : port-managed (set managed = true)

    OPERATIONAL_DECISION --> PENDING : next
    OPERATIONAL_DECISION -u-> OPERATIONAL : next
}

@enduml
