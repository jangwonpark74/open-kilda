Internal state:
* remote endpoint (swId + port) (initial not set)
* online (boolean) (initial true)

Input signals:
* port-up
* port-down
* discovery-timer
* discovery
* discovery-pushed
* enable
* disable
* online
* offline

Output signals:
* isl-up
* isl-down
* isl-disable
* isl-move
* isl-push-fail
* push-discovery

@startuml
state init <<choice>>
state enableCheck <<choice>>
state movedCheck <<choice>>

[*] --> init
init --> DOWN : port-is-down
init --> UP : port-is-up

UP --> DOWN : port-down
UP --> offline : offline
UP --> UP : discovery-timer\n(push-discovery)
UP --> disabled : disable
UP --> movedCheck : discovery

DOWN --> UP : port-up
DOWN --> offline : offline
DOWN --> disabled : disable

offline : enter / set online false
offline --> init : online\n(set online true)
offline -r-> disabled : disable

disabled --> enableCheck : enable

enableCheck --> offline : not isOnline
enableCheck --> init : isOnline

movedCheck --> discovered : new or same
movedCheck --> bound : change

discovered : enter / record remote
discovered : enter / emit isl-up
discovered --> disabled : disable\n(emit isl-disable)
discovered --> discoveredDOWN : port-down
discovered --> offline : offline
discovered --> movedCheck : discovery
discovered --> waitPush : discovery-timer

discoveredDOWN : enter / emit isl-down
discoveredDOWN --> disabled : disable\n(emit isl-disable)
discoveredDOWN --> offline : offline
discoveredDOWN --> UP : port-up

bound : enter / emit isl-move
bound --> discovered : bound-confirm

waitPush : enter / push-discovery
waitPush --> discovered : discovery-pushed\n(emit push-discovery)
waitPush --> discovered : discovery-timer\n(emit isl-push-fail)
waitPush --> offline : offline
waitPush --> disabled : disable\n(emit isl-disable)

@enduml
